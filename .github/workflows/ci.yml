name: Continuous integration

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    strategy:
      fail-fast: false
      matrix:
        rust: [nightly, stable]
        os: [ubuntu-latest, windows-latest, macos-latest]
        features: ["", "color", "derive", "macros", "color,derive", "color,derive,macros"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo check --all-targets --all --no-default-features --features=${{ matrix.features }}

  msrv:
    name: MSRV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@1.61.0
      # check only the root crate for MSRV
      - run: cargo build --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy --all --all-targets -- -D warnings

  test:
    name: Unit Test Suite
    needs: [check, fmt, clippy]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl]
        features: ["", "color"]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      - run: cargo test --workspace --no-fail-fast --target ${{ matrix.target }} --features=${{ matrix.features }}

  test_quickcheck:
    name: A quickcheck test suite
    needs: [check, fmt, clippy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --workspace --no-fail-fast -- --include-ignored qc_

  coverage:
    name: Coveralls
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: "0.15.0"
          args: "--workspace --out Lcov --output-dir ./coverage --exclude-files target/* --exclude-files tabled_derive/* --exclude-files examples/*"
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
