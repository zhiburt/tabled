[package]
name = "tabled"
version = "0.18.0"
authors = ["Maxim Zhiburt <zhiburt@gmail.com>"]
edition = "2018"
description = "An easy to use library for pretty print tables of Rust `struct`s and `enum`s."
repository = "https://github.com/zhiburt/tabled"
homepage = "https://github.com/zhiburt/tabled"
documentation = "https://docs.rs/tabled"
license = "MIT"
keywords = ["table", "print", "pretty-table", "format", "terminal"]
categories = ["text-processing", "visualization"]
readme = "README.md"

[badges]
coveralls = { repository = "https://github.com/zhiburt/tabled", branch = "master", service = "github" }
maintenance = { status = "actively-developed" }

[[example]]
name = "rename_all"
path = "examples/derive/rename_all.rs"
required-features = ["derive"]

[[example]]
name = "derive_rename"
path = "examples/derive/rename.rs"
required-features = ["derive"]

[[example]]
name = "derive_order"
path = "examples/derive/order.rs"
required-features = ["derive"]

[[example]]
name = "skip"
path = "examples/derive/skip.rs"
required-features = ["derive"]

[[example]]
name = "derive_inline"
path = "examples/derive/inline.rs"
required-features = ["derive"]

[[example]]
name = "derive_inline_enum"
path = "examples/derive/inline_enum.rs"
required-features = ["derive"]

[[example]]
name = "derive_display_with"
path = "examples/derive/display_with.rs"
required-features = ["derive"]

[[example]]
name = "derive_display_type"
path = "examples/derive/display_type.rs"
required-features = ["derive"]

[[example]]
name = "derive_crate_override"
path = "examples/derive/crate_override.rs"
required-features = ["derive"]

[[example]]
name = "derive_format"
path = "examples/derive/format.rs"
required-features = ["derive"]

[[example]]
name = "derive_format_enum"
path = "examples/derive/format_enum.rs"
required-features = ["derive"]

[[example]]
name = "derive_map"
path = "examples/derive/map.rs"
required-features = ["derive"]

[[example]]
name = "derive_map_inlined"
path = "examples/derive/map_inlined.rs"
required-features = ["derive"]

[features]
default = ["derive", "macros", "assert"]
std = ["papergrid/std", "testing_table/std"]
derive = ["tabled_derive", "std"]
ansi = ["papergrid/ansi", "testing_table/ansi", "ansi-str", "ansitok", "std"]
macros = ["std"]
assert = ["testing_table"]

[dependencies]
papergrid = { path = "../papergrid", default-features = false }
tabled_derive = { path = "../tabled_derive", optional = true }
ansi-str = { version = "0.9", optional = true }
ansitok = { version = "0.3", optional = true }
testing_table = { path = "../testing_table", default-features = false, optional = true }

# To run it locally (probably need to `add #![feature(doc_cfg)]` to the crate attributes to enable.
#
# RUSTDOCFLAGS="--cfg docsrs" cargo +nightly -Zunstable-options doc --no-deps --all-features --open
[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu"]
rustdoc-args = ["--cfg", "docsrs"]
rustc-args = ["--cfg", "docsrs"]
