use json_to_table::{json_to_table, Orientation};
use serde_json::json;
use tabled::settings::Style;

#[test]
fn orientation_test_1() {
    let value = json!(
        {"widget": {
            "debug": "on",
            "window": {
                "title": "Sample Konfabulator Widget",
                "name": "main_window",
                "width": 500,
                "height": 500
            },
            "image": {
                "src": "Images/Sun.png",
                "name": "sun1",
                "hOffset": 250,
                "vOffset": 250,
                "alignment": "center"
            },
            "text": {
                "data": "Click Here",
                "size": 36,
                "style": "bold",
                "name": "text1",
                "hOffset": 250,
                "vOffset": 100,
                "alignment": "center",
                "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
            }
        }}
    );

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗\n",
            "║ widget                                                                                                                                                                                                                                                                   ║\n",
            "╠══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣\n",
            "║ ╔═══════╦═══════════════════════════════════════════════════════════════╦══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╦═══════════════════════════════════════════════════════════════════╗ ║\n",
            "║ ║ debug ║ image                                                         ║ text                                                                                                                     ║ window                                                            ║ ║\n",
            "║ ╠═══════╬═══════════════════════════════════════════════════════════════╬══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╬═══════════════════════════════════════════════════════════════════╣ ║\n",
            "║ ║  on   ║ ╔═══════════╦═════════╦════════╦══════════════════╦═════════╗ ║ ╔═══════════╦══════════════╦═════════╦═════════╦═════════════════════════════════════════════╦══════╦════════╦═════════╗ ║ ╔════════╦═══════════════╦══════════════════════════════╦═══════╗ ║ ║\n",
            "║ ║       ║ ║ alignment ║ hOffset ║ name   ║ src              ║ vOffset ║ ║ ║ alignment ║ data         ║ hOffset ║ name    ║ onMouseUp                                   ║ size ║ style  ║ vOffset ║ ║ ║ height ║ name          ║ title                        ║ width ║ ║ ║\n",
            "║ ║       ║ ╠═══════════╬═════════╬════════╬══════════════════╬═════════╣ ║ ╠═══════════╬══════════════╬═════════╬═════════╬═════════════════════════════════════════════╬══════╬════════╬═════════╣ ║ ╠════════╬═══════════════╬══════════════════════════════╬═══════╣ ║ ║\n",
            "║ ║       ║ ║  center   ║  250    ║  sun1  ║  Images/Sun.png  ║  250    ║ ║ ║  center   ║  Click Here  ║  250    ║  text1  ║  sun1.opacity = (sun1.opacity / 100) * 90;  ║  36  ║  bold  ║  100    ║ ║ ║  500   ║  main_window  ║  Sample Konfabulator Widget  ║  500  ║ ║ ║\n",
            "║ ║       ║ ╚═══════════╩═════════╩════════╩══════════════════╩═════════╝ ║ ╚═══════════╩══════════════╩═════════╩═════════╩═════════════════════════════════════════════╩══════╩════════╩═════════╝ ║ ╚════════╩═══════════════╩══════════════════════════════╩═══════╝ ║ ║\n",
            "║ ╚═══════╩═══════════════════════════════════════════════════════════════╩══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╩═══════════════════════════════════════════════════════════════════╝ ║\n",
            "╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝",
        )
    );
}

#[test]
fn orientation_test_2() {
    let value = json!(
        {
            "glossary": {
                "title": "example glossary",
                "GlossDiv": {
                    "title": "S",
                    "GlossList": {
                        "GlossEntry": {
                            "ID": "SGML",
                            "SortAs": "SGML",
                            "GlossTerm": "Standard Generalized Markup Language",
                            "Acronym": "SGML",
                            "Abbrev": "ISO 8879:1986",
                            "GlossDef": {
                                "para": "A meta-markup language, used to create markup languages such as DocBook.",
                                "GlossSeeAlso": ["GML", "XML"]
                            },
                            "GlossSee": "markup"
                        }
                    }
                }
            }
        }
    );

    let table = json_to_table(&value)
        .with(Style::modern())
        .object_orientation(Orientation::Row)
        .array_orientation(Orientation::Row)
        .to_string();

    assert_eq!(
        table,
        concat!(
            "┌───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\n",
            "│ glossary                                                                                                                                                                                                                                          │\n",
            "├───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤\n",
            "│ ┌──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬────────────────────┐ │\n",
            "│ │ GlossDiv                                                                                                                                                                                                                 │ title              │ │\n",
            "│ ├──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼────────────────────┤ │\n",
            "│ │ ┌──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬───────┐ │  example glossary  │ │\n",
            "│ │ │ GlossList                                                                                                                                                                                                    │ title │ │                    │ │\n",
            "│ │ ├──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼───────┤ │                    │ │\n",
            "│ │ │ ┌──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐ │  S    │ │                    │ │\n",
            "│ │ │ │ GlossEntry                                                                                                                                                                                               │ │       │ │                    │ │\n",
            "│ │ │ ├──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤ │       │ │                    │ │\n",
            "│ │ │ │ ┌─────────────────┬─────────┬────────────────────────────────────────────────────────────────────────────────────────────────────┬──────────┬────────────────────────────────────────┬────────┬────────┐ │ │       │ │                    │ │\n",
            "│ │ │ │ │ Abbrev          │ Acronym │ GlossDef                                                                                           │ GlossSee │ GlossTerm                              │ ID     │ SortAs │ │ │       │ │                    │ │\n",
            "│ │ │ │ ├─────────────────┼─────────┼────────────────────────────────────────────────────────────────────────────────────────────────────┼──────────┼────────────────────────────────────────┼────────┼────────┤ │ │       │ │                    │ │\n",
            "│ │ │ │ │  ISO 8879:1986  │  SGML   │ ┌───────────────────┬────────────────────────────────────────────────────────────────────────────┐ │  markup  │  Standard Generalized Markup Language  │  SGML  │  SGML  │ │ │       │ │                    │ │\n",
            "│ │ │ │ │                 │         │ │ GlossSeeAlso      │ para                                                                       │ │          │                                        │        │        │ │ │       │ │                    │ │\n",
            "│ │ │ │ │                 │         │ ├───────────────────┼────────────────────────────────────────────────────────────────────────────┤ │          │                                        │        │        │ │ │       │ │                    │ │\n",
            "│ │ │ │ │                 │         │ │ ┌───────┬───────┐ │  A meta-markup language, used to create markup languages such as DocBook.  │ │          │                                        │        │        │ │ │       │ │                    │ │\n",
            "│ │ │ │ │                 │         │ │ │  GML  │  XML  │ │                                                                            │ │          │                                        │        │        │ │ │       │ │                    │ │\n",
            "│ │ │ │ │                 │         │ │ └───────┴───────┘ │                                                                            │ │          │                                        │        │        │ │ │       │ │                    │ │\n",
            "│ │ │ │ │                 │         │ └───────────────────┴────────────────────────────────────────────────────────────────────────────┘ │          │                                        │        │        │ │ │       │ │                    │ │\n",
            "│ │ │ │ └─────────────────┴─────────┴────────────────────────────────────────────────────────────────────────────────────────────────────┴──────────┴────────────────────────────────────────┴────────┴────────┘ │ │       │ │                    │ │\n",
            "│ │ │ └──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘ │       │ │                    │ │\n",
            "│ │ └──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴───────┘ │                    │ │\n",
            "│ └──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴────────────────────┘ │\n",
            "└───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘",
        )
    );
}

#[test]
fn orientation_visitor_test() {
    let value = json!(
        {"menu": {
            "header": "SVG Viewer",
            "items": [
                {"id": "Open"},
                {"id": "OpenNew", "label": "Open New"},
                null,
                {"id": "ZoomIn", "label": "Zoom In"},
                {"id": "ZoomOut", "label": "Zoom Out"},
                {"id": "OriginalView", "label": "Original View"},
                null,
                {"id": "Quality"},
                {"id": "Pause"},
                {"id": "Mute"},
                null,
                {"id": "Find", "label": "Find..."},
                {"id": "FindAgain", "label": "Find Again"},
                {"id": "Copy"},
                {"id": "CopyAgain", "label": "Copy Again"},
                {"id": "CopySVG", "label": "Copy SVG"},
                {"id": "ViewSVG", "label": "View SVG"},
                {"id": "ViewSource", "label": "View Source"},
                {"id": "SaveAs", "label": "Save As"},
                null,
                {"id": "Help"},
                {"id": "About", "label": "About Adobe CVG Viewer..."}
            ]
        }}
    );

    let table = json_to_table(&value).with(Style::modern()).to_string();

    assert_eq!(
        table,
        concat!(
            "┌──────┬──────────────────────────────────────────────────────────┐\n",
            "│ menu │ ┌────────┬─────────────────────────────────────────────┐ │\n",
            "│      │ │ header │  SVG Viewer                                 │ │\n",
            "│      │ ├────────┼─────────────────────────────────────────────┤ │\n",
            "│      │ │ items  │ ┌─────────────────────────────────────────┐ │ │\n",
            "│      │ │        │ │ ┌────┬────────┐                         │ │ │\n",
            "│      │ │        │ │ │ id │  Open  │                         │ │ │\n",
            "│      │ │        │ │ └────┴────────┘                         │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬────────────┐                  │ │ │\n",
            "│      │ │        │ │ │ id    │  OpenNew   │                  │ │ │\n",
            "│      │ │        │ │ ├───────┼────────────┤                  │ │ │\n",
            "│      │ │        │ │ │ label │  Open New  │                  │ │ │\n",
            "│      │ │        │ │ └───────┴────────────┘                  │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │                                         │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬───────────┐                   │ │ │\n",
            "│      │ │        │ │ │ id    │  ZoomIn   │                   │ │ │\n",
            "│      │ │        │ │ ├───────┼───────────┤                   │ │ │\n",
            "│      │ │        │ │ │ label │  Zoom In  │                   │ │ │\n",
            "│      │ │        │ │ └───────┴───────────┘                   │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬────────────┐                  │ │ │\n",
            "│      │ │        │ │ │ id    │  ZoomOut   │                  │ │ │\n",
            "│      │ │        │ │ ├───────┼────────────┤                  │ │ │\n",
            "│      │ │        │ │ │ label │  Zoom Out  │                  │ │ │\n",
            "│      │ │        │ │ └───────┴────────────┘                  │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬─────────────────┐             │ │ │\n",
            "│      │ │        │ │ │ id    │  OriginalView   │             │ │ │\n",
            "│      │ │        │ │ ├───────┼─────────────────┤             │ │ │\n",
            "│      │ │        │ │ │ label │  Original View  │             │ │ │\n",
            "│      │ │        │ │ └───────┴─────────────────┘             │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │                                         │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌────┬───────────┐                      │ │ │\n",
            "│      │ │        │ │ │ id │  Quality  │                      │ │ │\n",
            "│      │ │        │ │ └────┴───────────┘                      │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌────┬─────────┐                        │ │ │\n",
            "│      │ │        │ │ │ id │  Pause  │                        │ │ │\n",
            "│      │ │        │ │ └────┴─────────┘                        │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌────┬────────┐                         │ │ │\n",
            "│      │ │        │ │ │ id │  Mute  │                         │ │ │\n",
            "│      │ │        │ │ └────┴────────┘                         │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │                                         │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬───────────┐                   │ │ │\n",
            "│      │ │        │ │ │ id    │  Find     │                   │ │ │\n",
            "│      │ │        │ │ ├───────┼───────────┤                   │ │ │\n",
            "│      │ │        │ │ │ label │  Find...  │                   │ │ │\n",
            "│      │ │        │ │ └───────┴───────────┘                   │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬──────────────┐                │ │ │\n",
            "│      │ │        │ │ │ id    │  FindAgain   │                │ │ │\n",
            "│      │ │        │ │ ├───────┼──────────────┤                │ │ │\n",
            "│      │ │        │ │ │ label │  Find Again  │                │ │ │\n",
            "│      │ │        │ │ └───────┴──────────────┘                │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌────┬────────┐                         │ │ │\n",
            "│      │ │        │ │ │ id │  Copy  │                         │ │ │\n",
            "│      │ │        │ │ └────┴────────┘                         │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬──────────────┐                │ │ │\n",
            "│      │ │        │ │ │ id    │  CopyAgain   │                │ │ │\n",
            "│      │ │        │ │ ├───────┼──────────────┤                │ │ │\n",
            "│      │ │        │ │ │ label │  Copy Again  │                │ │ │\n",
            "│      │ │        │ │ └───────┴──────────────┘                │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬────────────┐                  │ │ │\n",
            "│      │ │        │ │ │ id    │  CopySVG   │                  │ │ │\n",
            "│      │ │        │ │ ├───────┼────────────┤                  │ │ │\n",
            "│      │ │        │ │ │ label │  Copy SVG  │                  │ │ │\n",
            "│      │ │        │ │ └───────┴────────────┘                  │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬────────────┐                  │ │ │\n",
            "│      │ │        │ │ │ id    │  ViewSVG   │                  │ │ │\n",
            "│      │ │        │ │ ├───────┼────────────┤                  │ │ │\n",
            "│      │ │        │ │ │ label │  View SVG  │                  │ │ │\n",
            "│      │ │        │ │ └───────┴────────────┘                  │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬───────────────┐               │ │ │\n",
            "│      │ │        │ │ │ id    │  ViewSource   │               │ │ │\n",
            "│      │ │        │ │ ├───────┼───────────────┤               │ │ │\n",
            "│      │ │        │ │ │ label │  View Source  │               │ │ │\n",
            "│      │ │        │ │ └───────┴───────────────┘               │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬───────────┐                   │ │ │\n",
            "│      │ │        │ │ │ id    │  SaveAs   │                   │ │ │\n",
            "│      │ │        │ │ ├───────┼───────────┤                   │ │ │\n",
            "│      │ │        │ │ │ label │  Save As  │                   │ │ │\n",
            "│      │ │        │ │ └───────┴───────────┘                   │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │                                         │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌────┬────────┐                         │ │ │\n",
            "│      │ │        │ │ │ id │  Help  │                         │ │ │\n",
            "│      │ │        │ │ └────┴────────┘                         │ │ │\n",
            "│      │ │        │ ├─────────────────────────────────────────┤ │ │\n",
            "│      │ │        │ │ ┌───────┬─────────────────────────────┐ │ │ │\n",
            "│      │ │        │ │ │ id    │  About                      │ │ │ │\n",
            "│      │ │        │ │ ├───────┼─────────────────────────────┤ │ │ │\n",
            "│      │ │        │ │ │ label │  About Adobe CVG Viewer...  │ │ │ │\n",
            "│      │ │        │ │ └───────┴─────────────────────────────┘ │ │ │\n",
            "│      │ │        │ └─────────────────────────────────────────┘ │ │\n",
            "│      │ └────────┴─────────────────────────────────────────────┘ │\n",
            "└──────┴──────────────────────────────────────────────────────────┘",
        )
    );
}

#[test]
fn collapse_array_orientation_test_1() {
    let value = json!(
        {"widget": {
            "debug": "on",
            "text": {
                "data": ["Click Here", "asda", "123132"],
                "size": 36,
                "style": "bold",
                "name": "text1",
                "hOffset": 250,
                "vOffset": 100,
                "alignment": "center",
                "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
            }
        }}
    );

    let table = json_to_table(&value)
        .with(Style::extended())
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔════════╦═══════╦═══════════════════════════════════════════════════════╗\n",
            "║ widget ║ debug ║ on                                                    ║\n",
            "║        ╠═══════╬═══════════╦═══════════════════════════════════════════╣\n",
            "║        ║ text  ║ alignment ║ center                                    ║\n",
            "║        ║       ╠═══════════╬═════════════════╦═══════════╦═════════════╣\n",
            "║        ║       ║ data      ║ Click Here      ║ asda      ║ 123132      ║\n",
            "║        ║       ╠═══════════╬═════════════════╩═══════════╩═════════════╣\n",
            "║        ║       ║ hOffset   ║ 250                                       ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ name      ║ text1                                     ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ onMouseUp ║ sun1.opacity = (sun1.opacity / 100) * 90; ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ size      ║ 36                                        ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ style     ║ bold                                      ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ vOffset   ║ 100                                       ║\n",
            "╚════════╩═══════╩═══════════╩═══════════════════════════════════════════╝",
        )
    );
}

#[test]
fn collapse_array_orientation_test_2() {
    let value = json!(
        {"widget": {
            "debug": "on",
            "text": {
                "data": ["Click Here", "asda", "123132"],
                "data1": [["Click", "1", "3", "4"], "aa", {"123132": 11}],
                "size": 36,
                "style": "bold",
                "name": "text1",
                "hOffset": 250,
                "vOffset": 100,
                "alignment": "center",
                "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
            }
        }}
    );

    let table = json_to_table(&value)
        .with(Style::extended())
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔════════╦═══════╦═══════════════════════════════════════════════════════╗\n",
            "║ widget ║ debug ║ on                                                    ║\n",
            "║        ╠═══════╬═══════════╦═══════════════════════════════════════════╣\n",
            "║        ║ text  ║ alignment ║ center                                    ║\n",
            "║        ║       ╠═══════════╬═════════════════╦═══════════╦═════════════╣\n",
            "║        ║       ║ data      ║ Click Here      ║ asda      ║ 123132      ║\n",
            "║        ║       ╠═══════════╬══════════╦═══╦══╩╦═══╦═════╦╩═══════╦═════╣\n",
            "║        ║       ║ data1     ║ Click    ║ 1 ║ 3 ║ 4 ║ aa  ║ 123132 ║ 11  ║\n",
            "║        ║       ╠═══════════╬══════════╩═══╩═══╩═══╩═════╩════════╩═════╣\n",
            "║        ║       ║ hOffset   ║ 250                                       ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ name      ║ text1                                     ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ onMouseUp ║ sun1.opacity = (sun1.opacity / 100) * 90; ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ size      ║ 36                                        ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ style     ║ bold                                      ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ vOffset   ║ 100                                       ║\n",
            "╚════════╩═══════╩═══════════╩═══════════════════════════════════════════╝",
        )
    );
}

#[test]
fn collapse_array_orientation_test_3() {
    let value = json!(
        {"widget": {
            "debug": "on",
            "text": {
                "data": ["Click Here", "asda", "123132"],
                "data1": [["Click", "1", "3", "4"], "aa", "123132", 11],
                "size": 36,
                "style": "bold",
                "name": "text1",
                "hOffset": 250,
                "vOffset": 100,
                "alignment": "center",
                "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
            }
        }}
    );

    let table = json_to_table(&value)
        .with(Style::extended())
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔════════╦═══════╦═══════════════════════════════════════════════════════╗\n",
            "║ widget ║ debug ║ on                                                    ║\n",
            "║        ╠═══════╬═══════════╦═══════════════════════════════════════════╣\n",
            "║        ║ text  ║ alignment ║ center                                    ║\n",
            "║        ║       ╠═══════════╬═════════════════╦═══════════╦═════════════╣\n",
            "║        ║       ║ data      ║ Click Here      ║ asda      ║ 123132      ║\n",
            "║        ║       ╠═══════════╬═════════╦═══╦═══╬═══╦═════╦═╩═══════╦═════╣\n",
            "║        ║       ║ data1     ║ Click   ║ 1 ║ 3 ║ 4 ║ aa  ║ 123132  ║ 11  ║\n",
            "║        ║       ╠═══════════╬═════════╩═══╩═══╩═══╩═════╩═════════╩═════╣\n",
            "║        ║       ║ hOffset   ║ 250                                       ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ name      ║ text1                                     ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ onMouseUp ║ sun1.opacity = (sun1.opacity / 100) * 90; ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ size      ║ 36                                        ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ style     ║ bold                                      ║\n",
            "║        ║       ╠═══════════╬═══════════════════════════════════════════╣\n",
            "║        ║       ║ vOffset   ║ 100                                       ║\n",
            "╚════════╩═══════╩═══════════╩═══════════════════════════════════════════╝",
        )
    );
}

#[test]
fn collapse_array_orientation_test_4() {
    let value = json!({
        "data": ["Click Here", "asda", "123132"],
        "data0":  "",
        "data1": [["Click", "1", "3", "4"], ["aa", "123132"], [11, 1, 1, 1, 1, 1]],
        "data2": [["C", "1", "3", "4"], ["a", "12"], [11, 1, 1]],
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔═══════╦══════════════════════╦════════════════╦══════════════════╗\n",
            "║ data  ║ Click Here           ║ asda           ║ 123132           ║\n",
            "╠═══════╬══════════════════════╩════════════════╩══════════════════╣\n",
            "║ data0 ║                                                          ║\n",
            "╠═══════╬═══════╦═══╦═══╦═══╦════╦════════╦════╦═══╦═══╦═══╦═══╦═══╣\n",
            "║ data1 ║ Click ║ 1 ║ 3 ║ 4 ║ aa ║ 123132 ║ 11 ║ 1 ║ 1 ║ 1 ║ 1 ║ 1 ║\n",
            "╠═══════╬═══════╬═══╩╦══╩═╦═╩══╦═╩═════╦══╩════╬═══╩═══╬═══╩═╦═╩═══╣\n",
            "║ data2 ║ C     ║ 1  ║ 3  ║ 4  ║ a     ║ 12    ║ 11    ║ 1   ║ 1   ║\n",
            "╚═══════╩═══════╩════╩════╩════╩═══════╩═══════╩═══════╩═════╩═════╝",
        )
    );
}

#[test]
fn collapse_array_orientation_test_5() {
    let value = json!({
        "data": ["Click Here", "asda", "123132", "1"],
        "data1": [["Click", "1", "3", "4"], ["aa", "123132"], [11, 1, 1, 1, 1, 1]],
        "data2": [["C", "1", "3", "4"], ["a", "12"], [11, 1, 1]],
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔═══════╦════════════════════╦════════════╦══════════════╦═════════╗\n",
            "║ data  ║ Click Here         ║ asda       ║ 123132       ║ 1       ║\n",
            "╠═══════╬═══════╦═══╦═══╦═══╦╩═══╦════════╬════╦═══╦═══╦═╩═╦═══╦═══╣\n",
            "║ data1 ║ Click ║ 1 ║ 3 ║ 4 ║ aa ║ 123132 ║ 11 ║ 1 ║ 1 ║ 1 ║ 1 ║ 1 ║\n",
            "╠═══════╬═══════╬═══╩╦══╩═╦═╩══╦═╩═════╦══╩════╬═══╩═══╬═══╩═╦═╩═══╣\n",
            "║ data2 ║ C     ║ 1  ║ 3  ║ 4  ║ a     ║ 12    ║ 11    ║ 1   ║ 1   ║\n",
            "╚═══════╩═══════╩════╩════╩════╩═══════╩═══════╩═══════╩═════╩═════╝",
        )
    );
}

#[test]
fn collapse_array_orientation_test_6() {
    let value = json!({
        "data": ["Click Here", "asda", "123132", "1"],
        "data1": [["Click", "1", "3", "4"], {"aa": "123132", "bb": "123132"}, [11, 1, 1, 1, 1, 1]],
        "data2": { "11": {"x": "xxx"}, "22": 1 },
        "data3": [["C", "1", "3", "4"], ["a", "12"], [11, 1, 1]],
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔═══════╦════════════════════╦════════════╦══════════════╦═════════╗\n",
            "║ data  ║ Click Here         ║ asda       ║ 123132       ║ 1       ║\n",
            "╠═══════╬═══════╦═══╦═══╦═══╦╩═══╦════════╬════╦═══╦═══╦═╩═╦═══╦═══╣\n",
            "║ data1 ║ Click ║ 1 ║ 3 ║ 4 ║ aa ║ 123132 ║ 11 ║ 1 ║ 1 ║ 1 ║ 1 ║ 1 ║\n",
            "║       ║       ║   ║   ║   ╠════╬════════╣    ║   ║   ║   ║   ║   ║\n",
            "║       ║       ║   ║   ║   ║ bb ║ 123132 ║    ║   ║   ║   ║   ║   ║\n",
            "╠═══════╬════╦══╩╦══╩═══╩═══╩════╩════════╩════╩═══╩═══╩═══╩═══╩═══╣\n",
            "║ data2 ║ 11 ║ x ║ xxx                                             ║\n",
            "║       ╠════╬═══╩═════════════════════════════════════════════════╣\n",
            "║       ║ 22 ║ 1                                                   ║\n",
            "╠═══════╬════╩══╦════╦════╦════╦═══════╦═══════╦═══════╦═════╦═════╣\n",
            "║ data3 ║ C     ║ 1  ║ 3  ║ 4  ║ a     ║ 12    ║ 11    ║ 1   ║ 1   ║\n",
            "╚═══════╩═══════╩════╩════╩════╩═══════╩═══════╩═══════╩═════╩═════╝",
        )
    );
}

#[test]
fn collapse_object_orientation_test_1() {
    let value = json!({
        "widget": {
            "debug": "on",
            "text": {
                "data": ["Click Here", "asda", "123132"],
                "size": 36,
                "style": "bold",
                "name": "text1",
                "hOffset": 250,
                "vOffset": 100,
                "alignment": "center",
                "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
            }
        }
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗\n",
            "║ widget                                                                                                                ║\n",
            "╠═══════╦═══════════════════════════════════════════════════════════════════════════════════════════════════════════════╣\n",
            "║ debug ║ text                                                                                                          ║\n",
            "╠═══════╬═══════════╦════════════╦═════════╦═══════╦═══════════════════════════════════════════╦══════╦═══════╦═════════╣\n",
            "║ on    ║ alignment ║ data       ║ hOffset ║ name  ║ onMouseUp                                 ║ size ║ style ║ vOffset ║\n",
            "║       ╠═══════════╬════════════╬═════════╬═══════╬═══════════════════════════════════════════╬══════╬═══════╬═════════╣\n",
            "║       ║ center    ║ Click Here ║ 250     ║ text1 ║ sun1.opacity = (sun1.opacity / 100) * 90; ║ 36   ║ bold  ║ 100     ║\n",
            "║       ║           ╠════════════╣         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║ asda       ║         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ╠════════════╣         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║ 123132     ║         ║       ║                                           ║      ║       ║         ║\n",
            "╚═══════╩═══════════╩════════════╩═════════╩═══════╩═══════════════════════════════════════════╩══════╩═══════╩═════════╝",
        )
    );
}

#[test]
fn collapse_object_orientation_test_2() {
    let value = json!(
        {"widget": {
            "debug": "on",
            "text": {
                "data": ["Click Here", "asda", "123132"],
                "data1": [["Click", "1", "3", "4"], "aa", {"123132": 11}],
                "size": 36,
                "style": "bold",
                "name": "text1",
                "hOffset": 250,
                "vOffset": 100,
                "alignment": "center",
                "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
            }
        }}
    );

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗\n",
            "║ widget                                                                                                                         ║\n",
            "╠═══════╦════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣\n",
            "║ debug ║ text                                                                                                                   ║\n",
            "╠═══════╬═══════════╦════════════╦════════╦═════════╦═══════╦═══════════════════════════════════════════╦══════╦═══════╦═════════╣\n",
            "║ on    ║ alignment ║ data       ║ data1  ║ hOffset ║ name  ║ onMouseUp                                 ║ size ║ style ║ vOffset ║\n",
            "║       ╠═══════════╬════════════╬════════╬═════════╬═══════╬═══════════════════════════════════════════╬══════╬═══════╬═════════╣\n",
            "║       ║ center    ║ Click Here ║ Click  ║ 250     ║ text1 ║ sun1.opacity = (sun1.opacity / 100) * 90; ║ 36   ║ bold  ║ 100     ║\n",
            "║       ║           ║            ╠════════╣         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║            ║ 1      ║         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║            ╠════════╣         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║            ║ 3      ║         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ╠════════════╬════════╣         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║ asda       ║ 4      ║         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║            ╠════════╣         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║            ║ aa     ║         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ╠════════════╬════════╣         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║ 123132     ║ 123132 ║         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║            ╠════════╣         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║            ║ 11     ║         ║       ║                                           ║      ║       ║         ║\n",
            "╚═══════╩═══════════╩════════════╩════════╩═════════╩═══════╩═══════════════════════════════════════════╩══════╩═══════╩═════════╝",
        )
    );
}

#[test]
fn collapse_object_orientation_test_3() {
    let value = json!(
        {"widget": {
            "debug": "on",
            "text": {
                "data": ["Click Here", "asda", "123132"],
                "data1": [["Click", "1", "3", "4"], "aa", "123132", 11],
                "size": 36,
                "style": "bold",
                "name": "text1",
                "hOffset": 250,
                "vOffset": 100,
                "alignment": "center",
                "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
            }
        }}
    );

    let table = json_to_table(&value)
        .with(Style::modern())
        .object_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "┌────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\n",
            "│ widget                                                                                                                         │\n",
            "├───────┬────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤\n",
            "│ debug │ text                                                                                                                   │\n",
            "├───────┼───────────┬────────────┬────────┬─────────┬───────┬───────────────────────────────────────────┬──────┬───────┬─────────┤\n",
            "│ on    │ alignment │ data       │ data1  │ hOffset │ name  │ onMouseUp                                 │ size │ style │ vOffset │\n",
            "│       ├───────────┼────────────┼────────┼─────────┼───────┼───────────────────────────────────────────┼──────┼───────┼─────────┤\n",
            "│       │ center    │ Click Here │ Click  │ 250     │ text1 │ sun1.opacity = (sun1.opacity / 100) * 90; │ 36   │ bold  │ 100     │\n",
            "│       │           │            ├────────┤         │       │                                           │      │       │         │\n",
            "│       │           │            │ 1      │         │       │                                           │      │       │         │\n",
            "│       │           │            ├────────┤         │       │                                           │      │       │         │\n",
            "│       │           │            │ 3      │         │       │                                           │      │       │         │\n",
            "│       │           ├────────────┼────────┤         │       │                                           │      │       │         │\n",
            "│       │           │ asda       │ 4      │         │       │                                           │      │       │         │\n",
            "│       │           │            ├────────┤         │       │                                           │      │       │         │\n",
            "│       │           │            │ aa     │         │       │                                           │      │       │         │\n",
            "│       │           ├────────────┼────────┤         │       │                                           │      │       │         │\n",
            "│       │           │ 123132     │ 123132 │         │       │                                           │      │       │         │\n",
            "│       │           │            ├────────┤         │       │                                           │      │       │         │\n",
            "│       │           │            │ 11     │         │       │                                           │      │       │         │\n",
            "└───────┴───────────┴────────────┴────────┴─────────┴───────┴───────────────────────────────────────────┴──────┴───────┴─────────┘",
        )
    );
}

#[test]
fn collapse_object_orientation_test_4() {
    let value = json!({
        "data": ["Click Here", "asda", "123132"],
        "data0":  "",
        "data1": [["Click", "1", "3", "4"], ["aa", "123132"], [11, 1, 1, 1, 1, 1]],
        "data2": [["C", "1", "3", "4"], ["a", "12"], [11, 1, 1]],
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔════════════╦═══════╦════════╦═══════╗\n",
            "║ data       ║ data0 ║ data1  ║ data2 ║\n",
            "╠════════════╬═══════╬════════╬═══════╣\n",
            "║ Click Here ║       ║ Click  ║ C     ║\n",
            "║            ║       ╠════════╣       ║\n",
            "║            ║       ║ 1      ║       ║\n",
            "║            ║       ╠════════╬═══════╣\n",
            "║            ║       ║ 3      ║ 1     ║\n",
            "║            ║       ╠════════╬═══════╣\n",
            "║            ║       ║ 4      ║ 3     ║\n",
            "╠════════════║       ╠════════╬═══════╣\n",
            "║ asda       ║       ║ aa     ║ 4     ║\n",
            "║            ║       ╠════════╬═══════╣\n",
            "║            ║       ║ 123132 ║ a     ║\n",
            "║            ║       ╠════════╣       ║\n",
            "║            ║       ║ 11     ╠═══════╣\n",
            "║            ║       ╠════════╣ 12    ║\n",
            "║            ║       ║ 1      ║       ║\n",
            "╠════════════║       ╠════════╬═══════╣\n",
            "║ 123132     ║       ║ 1      ║ 11    ║\n",
            "║            ║       ╠════════╣       ║\n",
            "║            ║       ║ 1      ║       ║\n",
            "║            ║       ╠════════╬═══════╣\n",
            "║            ║       ║ 1      ║ 1     ║\n",
            "║            ║       ╠════════╬═══════╣\n",
            "║            ║       ║ 1      ║ 1     ║\n",
            "╚════════════╩═══════╩════════╩═══════╝",
        )
    );
}

#[test]
fn collapse_object_orientation_test_5() {
    let value = json!({
        "data": ["Click Here", "asda", "123132", "1"],
        "data1": [["Click", "1", "3", "4"], ["aa", "123132"], [11, 1, 1, 1, 1, 1]],
        "data2": [["C", "1", "3", "4"], ["a", "12"], [11, 1, 1]],
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔════════════╦════════╦═══════╗\n",
            "║ data       ║ data1  ║ data2 ║\n",
            "╠════════════╬════════╬═══════╣\n",
            "║ Click Here ║ Click  ║ C     ║\n",
            "║            ╠════════╣       ║\n",
            "║            ║ 1      ║       ║\n",
            "║            ╠════════╬═══════╣\n",
            "║            ║ 3      ║ 1     ║\n",
            "╠════════════╬════════╬═══════╣\n",
            "║ asda       ║ 4      ║ 3     ║\n",
            "║            ╠════════╬═══════╣\n",
            "║            ║ aa     ║ 4     ║\n",
            "║            ╠════════╬═══════╣\n",
            "║            ║ 123132 ║ a     ║\n",
            "╠════════════╬════════╣       ║\n",
            "║ 123132     ║ 11     ╠═══════╣\n",
            "║            ╠════════╣ 12    ║\n",
            "║            ║ 1      ║       ║\n",
            "║            ╠════════╬═══════╣\n",
            "║            ║ 1      ║ 11    ║\n",
            "╠════════════╬════════╣       ║\n",
            "║ 1          ║ 1      ║       ║\n",
            "║            ╠════════╬═══════╣\n",
            "║            ║ 1      ║ 1     ║\n",
            "║            ╠════════╬═══════╣\n",
            "║            ║ 1      ║ 1     ║\n",
            "╚════════════╩════════╩═══════╝",
        )
    );
}

#[test]
fn collapse_object_orientation_test_6() {
    let value = json!({
        "data": ["Click Here", "asda", "123132", "1"],
        "data1": [["Click", "1", "3", "4"], {"aa": "123132", "bb": "123132"}, [11, 1, 1, 1, 1, 1]],
        "data2": { "11": {"x": "xxx"}, "22": 1 },
        "data3": [["C", "1", "3", "4"], ["a", "12"], [11, 1, 1]],
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔════════════╦═════════════════╦══════════╦═══════╗\n",
            "║ data       ║ data1           ║ data2    ║ data3 ║\n",
            "╠════════════╬═════════════════╬═════╦════╬═══════╣\n",
            "║ Click Here ║ Click           ║ 11  ║ 22 ║ C     ║\n",
            "║            ╠═════════════════╬═════╬════╣       ║\n",
            "║            ║ 1               ║ x   ║ 1  ║       ║\n",
            "║            ╠═════════════════╬═════╣    ╠═══════╣\n",
            "║            ║ 3               ║ xxx ║    ║ 1     ║\n",
            "╠════════════╬═════════════════╣     ║    ╠═══════╣\n",
            "║ asda       ║ 4               ║     ║    ║ 3     ║\n",
            "║            ╠════════╦════════╣     ║    ╠═══════╣\n",
            "║            ║ aa     ║ bb     ║     ║    ║ 4     ║\n",
            "║            ╠════════╬════════╣     ║    ╠═══════╣\n",
            "║            ║ 123132 ║ 123132 ║     ║    ║ a     ║\n",
            "╠════════════╬════════╩════════╣     ║    ║       ║\n",
            "║ 123132     ║ 11              ║     ║    ╠═══════╣\n",
            "║            ╠═════════════════║     ║    ║ 12    ║\n",
            "║            ║ 1               ║     ║    ║       ║\n",
            "║            ╠═════════════════║     ║    ╠═══════╣\n",
            "║            ║ 1               ║     ║    ║ 11    ║\n",
            "╠════════════╬═════════════════║     ║    ║       ║\n",
            "║ 1          ║ 1               ║     ║    ║       ║\n",
            "║            ╠═════════════════║     ║    ╠═══════╣\n",
            "║            ║ 1               ║     ║    ║ 1     ║\n",
            "║            ╠═════════════════║     ║    ╠═══════╣\n",
            "║            ║ 1               ║     ║    ║ 1     ║\n",
            "╚════════════╩═════════════════╩═════╩════╩═══════╝",
        )
    );
}

#[test]
fn collapse_object_array_orientation_test_1() {
    let value = json!({
        "widget": {
            "debug": "on",
            "text": {
                "data": ["Click Here", "asda", "123132"],
                "size": 36,
                "style": "bold",
                "name": "text1",
                "hOffset": 250,
                "vOffset": 100,
                "alignment": "center",
                "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
            }
        }
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗\n",
            "║ widget                                                                                                                                ║\n",
            "╠═══════╦═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣\n",
            "║ debug ║ text                                                                                                                          ║\n",
            "╠═══════╬═══════════╦════════════════════════════╦═════════╦═══════╦═══════════════════════════════════════════╦══════╦═══════╦═════════╣\n",
            "║ on    ║ alignment ║ data                       ║ hOffset ║ name  ║ onMouseUp                                 ║ size ║ style ║ vOffset ║\n",
            "║       ╠═══════════╬════════════╦══════╦════════╬═════════╬═══════╬═══════════════════════════════════════════╬══════╬═══════╬═════════╣\n",
            "║       ║ center    ║ Click Here ║ asda ║ 123132 ║ 250     ║ text1 ║ sun1.opacity = (sun1.opacity / 100) * 90; ║ 36   ║ bold  ║ 100     ║\n",
            "╚═══════╩═══════════╩════════════╩══════╩════════╩═════════╩═══════╩═══════════════════════════════════════════╩══════╩═══════╩═════════╝",
        )
    );
}

#[test]
fn collapse_object_array_orientation_test_2() {
    let value = json!(
        {"widget": {
            "debug": "on",
            "text": {
                "data": ["Click Here", "asda", "123132"],
                "data1": [["Click", "1", "3", "4"], "aa", {"123132": 11}],
                "size": 36,
                "style": "bold",
                "name": "text1",
                "hOffset": 250,
                "vOffset": 100,
                "alignment": "center",
                "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
            }
        }}
    );

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗\n",
            "║ widget                                                                                                                                                                  ║\n",
            "╠═══════╦═════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╣\n",
            "║ debug ║ text                                                                                                                                                            ║\n",
            "╠═══════╬═══════════╦════════════════════════════╦═════════════════════════════════╦═════════╦═══════╦═══════════════════════════════════════════╦══════╦═══════╦═════════╣\n",
            "║ on    ║ alignment ║ data                       ║ data1                           ║ hOffset ║ name  ║ onMouseUp                                 ║ size ║ style ║ vOffset ║\n",
            "║       ╠═══════════╬════════════╦══════╦════════╬═══════╦═══╦═══╦═══╦════╦════════╬═════════╬═══════╬═══════════════════════════════════════════╬══════╬═══════╬═════════╣\n",
            "║       ║ center    ║ Click Here ║ asda ║ 123132 ║ Click ║ 1 ║ 3 ║ 4 ║ aa ║ 123132 ║ 250     ║ text1 ║ sun1.opacity = (sun1.opacity / 100) * 90; ║ 36   ║ bold  ║ 100     ║\n",
            "║       ║           ║            ║      ║        ║       ║   ║   ║   ║    ╠════════╣         ║       ║                                           ║      ║       ║         ║\n",
            "║       ║           ║            ║      ║        ║       ║   ║   ║   ║    ║ 11     ║         ║       ║                                           ║      ║       ║         ║\n",
            "╚═══════╩═══════════╩════════════╩══════╩════════╩═══════╩═══╩═══╩═══╩════╩════════╩═════════╩═══════╩═══════════════════════════════════════════╩══════╩═══════╩═════════╝",
        )
    );
}

#[test]
fn collapse_object_array_orientation_test_3() {
    let value = json!(
        {"widget": {
            "debug": "on",
            "text": {
                "data": ["Click Here", "asda", "123132"],
                "data1": [["Click", "1", "3", "4"], "aa", "123132", 11],
                "size": 36,
                "style": "bold",
                "name": "text1",
                "hOffset": 250,
                "vOffset": 100,
                "alignment": "center",
                "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
            }
        }}
    );

    let table = json_to_table(&value)
        .with(Style::modern())
        .object_orientation(Orientation::Row)
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "┌──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐\n",
            "│ widget                                                                                                                                                                       │\n",
            "├───────┬──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤\n",
            "│ debug │ text                                                                                                                                                                 │\n",
            "├───────┼───────────┬────────────────────────────┬──────────────────────────────────────┬─────────┬───────┬───────────────────────────────────────────┬──────┬───────┬─────────┤\n",
            "│ on    │ alignment │ data                       │ data1                                │ hOffset │ name  │ onMouseUp                                 │ size │ style │ vOffset │\n",
            "│       ├───────────┼────────────┬──────┬────────┼───────┬───┬───┬───┬────┬────────┬────┼─────────┼───────┼───────────────────────────────────────────┼──────┼───────┼─────────┤\n",
            "│       │ center    │ Click Here │ asda │ 123132 │ Click │ 1 │ 3 │ 4 │ aa │ 123132 │ 11 │ 250     │ text1 │ sun1.opacity = (sun1.opacity / 100) * 90; │ 36   │ bold  │ 100     │\n",
            "└───────┴───────────┴────────────┴──────┴────────┴───────┴───┴───┴───┴────┴────────┴────┴─────────┴───────┴───────────────────────────────────────────┴──────┴───────┴─────────┘",
        )
    );
}

#[test]
fn collapse_object_array_orientation_test_4() {
    let value = json!({
        "data": ["Click Here", "asda", "123132"],
        "data0":  "",
        "data1": [["Click", "1", "3", "4"], ["aa", "123132"], [11, 1, 1, 1, 1, 1]],
        "data2": [["C", "1", "3", "4"], ["a", "12"], [11, 1, 1]],
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔════════════════════════════╦═══════╦══════════════════════════════════════════════════════════╦═════════════════════════════════════╗\n",
            "║ data                       ║ data0 ║ data1                                                    ║ data2                               ║\n",
            "╠════════════╦══════╦════════╬═══════╬═══════╦═══╦═══╦═══╦════╦════════╦════╦═══╦═══╦═══╦═══╦═══╬═══╦═══╦═══╦═══╦═══╦════╦════╦═══╦═══╣\n",
            "║ Click Here ║ asda ║ 123132 ║       ║ Click ║ 1 ║ 3 ║ 4 ║ aa ║ 123132 ║ 11 ║ 1 ║ 1 ║ 1 ║ 1 ║ 1 ║ C ║ 1 ║ 3 ║ 4 ║ a ║ 12 ║ 11 ║ 1 ║ 1 ║\n",
            "╚════════════╩══════╩════════╩═══════╩═══════╩═══╩═══╩═══╩════╩════════╩════╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩════╩════╩═══╩═══╝",
        )
    );
}

#[test]
fn collapse_object_array_orientation_test_5() {
    let value = json!({
        "data": ["Click Here", "asda", "123132", "1"],
        "data1": [["Click", "1", "3", "4"], ["aa", "123132"], [11, 1, 1, 1, 1, 1]],
        "data2": [["C", "1", "3", "4"], ["a", "12"], [11, 1, 1]],
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔════════════════════════════════╦══════════════════════════════════════════════════════════╦═════════════════════════════════════╗\n",
            "║ data                           ║ data1                                                    ║ data2                               ║\n",
            "╠════════════╦══════╦════════╦═══╬═══════╦═══╦═══╦═══╦════╦════════╦════╦═══╦═══╦═══╦═══╦═══╬═══╦═══╦═══╦═══╦═══╦════╦════╦═══╦═══╣\n",
            "║ Click Here ║ asda ║ 123132 ║ 1 ║ Click ║ 1 ║ 3 ║ 4 ║ aa ║ 123132 ║ 11 ║ 1 ║ 1 ║ 1 ║ 1 ║ 1 ║ C ║ 1 ║ 3 ║ 4 ║ a ║ 12 ║ 11 ║ 1 ║ 1 ║\n",
            "╚════════════╩══════╩════════╩═══╩═══════╩═══╩═══╩═══╩════╩════════╩════╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩═══╩════╩════╩═══╩═══╝",
        )
    );
}

#[test]
fn collapse_object_array_orientation_test_6() {
    let value = json!({
        "data": ["Click Here", "asda", "123132", "1"],
        "data1": [["Click", "1", "3", "4"], {"aa": "123132", "bb": "123132"}, [11, 1, 1, 1, 1, 1]],
        "data2": { "11": {"x": "xxx"}, "22": 1 },
        "data3": [["C", "1", "3", "4"], ["a", "12"], [11, 1, 1]],
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔════════════════════════════════╦══════════════════════════════════════════════════════════════╦══════════╦═════════════════════════════════════╗\n",
            "║ data                           ║ data1                                                        ║ data2    ║ data3                               ║\n",
            "╠════════════╦══════╦════════╦═══╬═══════╦═══╦═══╦═══╦════════╦════════╦════╦═══╦═══╦═══╦═══╦═══╬═════╦════╬═══╦═══╦═══╦═══╦═══╦════╦════╦═══╦═══╣\n",
            "║ Click Here ║ asda ║ 123132 ║ 1 ║ Click ║ 1 ║ 3 ║ 4 ║ aa     ║ bb     ║ 11 ║ 1 ║ 1 ║ 1 ║ 1 ║ 1 ║ 11  ║ 22 ║ C ║ 1 ║ 3 ║ 4 ║ a ║ 12 ║ 11 ║ 1 ║ 1 ║\n",
            "║            ║      ║        ║   ║       ║   ║   ║   ╠════════╬════════╣    ║   ║   ║   ║   ║   ╠═════╬════╣   ║   ║   ║   ║   ║    ║    ║   ║   ║\n",
            "║            ║      ║        ║   ║       ║   ║   ║   ║ 123132 ║ 123132 ║    ║   ║   ║   ║   ║   ║ x   ║ 1  ║   ║   ║   ║   ║   ║    ║    ║   ║   ║\n",
            "║            ║      ║        ║   ║       ║   ║   ║   ║        ║        ║    ║   ║   ║   ║   ║   ╠═════╣    ║   ║   ║   ║   ║   ║    ║    ║   ║   ║\n",
            "║            ║      ║        ║   ║       ║   ║   ║   ║        ║        ║    ║   ║   ║   ║   ║   ║ xxx ║    ║   ║   ║   ║   ║   ║    ║    ║   ║   ║\n",
            "╚════════════╩══════╩════════╩═══╩═══════╩═══╩═══╩═══╩════════╩════════╩════╩═══╩═══╩═══╩═══╩═══╩═════╩════╩═══╩═══╩═══╩═══╩═══╩════╩════╩═══╩═══╝",
        )
    );
}

#[test]
fn collapse_object_array_orientation_test_7() {
    let value = json!({
        "widget": {
            "debug": "on",
            "text": {
                "data": ["Click Here", "asda", "123132"],
                "size": 36,
                "style": "bold",
                "name": "text1",
                "hOffset": 250,
                "vOffset": 100,
                "alignment": "center",
                "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
            }
        },
        "123": ["1123", "qwe", "sad"],
        "2345": {
            "debug1\ndebug1": "on",
            "debug2": "on",
            "text": {
                "data": ["Click Here", "asda", "123132"],
                "alignment": ";\n;\n;",
                "onMouseUp": ";"
            }
        },
        "132456": "1123",
        "wwwww23": "1123",
    });

    let table = json_to_table(&value)
        .with(Style::extended())
        .object_orientation(Orientation::Row)
        .array_orientation(Orientation::Row)
        .collapse()
        .to_string();

    assert_eq!(
        table,
        concat!(
            "╔══════════════════╦════════╦══════════════════════════════════════════════════════════════════════╦═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╦═════════╗\n",
            "║ 123              ║ 132456 ║ 2345                                                                 ║ widget                                                                                                                                ║ wwwww23 ║\n",
            "╠══════╦═════╦═════╬════════╬════════╦════════╦════════════════════════════════════════════════════╬═══════╦═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╬═════════╣\n",
            "║ 1123 ║ qwe ║ sad ║ 1123   ║ debug1 ║ debug2 ║ text                                               ║ debug ║ text                                                                                                                          ║ 1123    ║\n",
            "║      ║     ║     ║        ║ debug1 ║        ║                                                    ╠═══════╬═══════════╦════════════════════════════╦═════════╦═══════╦═══════════════════════════════════════════╦══════╦═══════╦═════════╣         ║\n",
            "║      ║     ║     ║        ╠════════╬════════╬═══════════╦════════════════════════════╦═══════════╣ on    ║ alignment ║ data                       ║ hOffset ║ name  ║ onMouseUp                                 ║ size ║ style ║ vOffset ║         ║\n",
            "║      ║     ║     ║        ║ on     ║ on     ║ alignment ║ data                       ║ onMouseUp ║       ╠═══════════╬════════════╦══════╦════════╬═════════╬═══════╬═══════════════════════════════════════════╬══════╬═══════╬═════════╣         ║\n",
            "║      ║     ║     ║        ║        ║        ╠═══════════╬════════════╦══════╦════════╬═══════════╣       ║ center    ║ Click Here ║ asda ║ 123132 ║ 250     ║ text1 ║ sun1.opacity = (sun1.opacity / 100) * 90; ║ 36   ║ bold  ║ 100     ║         ║\n",
            "║      ║     ║     ║        ║        ║        ║ ;         ║ Click Here ║ asda ║ 123132 ║ ;         ║       ║           ║            ║      ║        ║         ║       ║                                           ║      ║       ║         ║         ║\n",
            "║      ║     ║     ║        ║        ║        ║ ;         ║            ║      ║        ║           ║       ║           ║            ║      ║        ║         ║       ║                                           ║      ║       ║         ║         ║\n",
            "║      ║     ║     ║        ║        ║        ║ ;         ║            ║      ║        ║           ║       ║           ║            ║      ║        ║         ║       ║                                           ║      ║       ║         ║         ║\n",
            "╚══════╩═════╩═════╩════════╩════════╩════════╩═══════════╩════════════╩══════╩════════╩═══════════╩═══════╩═══════════╩════════════╩══════╩════════╩═════════╩═══════╩═══════════════════════════════════════════╩══════╩═══════╩═════════╩═════════╝",
        )
    );
}
